name: Test
on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node: [10, 12]
        os: [ubuntu-latest, macOS, windows-latest]
    env:
      ENDPOINT: ${{ secrets.ENDPOINT }}
      USER: ${{ secrets.USER }}
      SCHEME: ${{ secrets.SCHEME }}
      VERSION: ${{ secrets.VERSION }}
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      SCHAIN_OWNER_PK: ${{ secrets.SCHAIN_OWNER_PK }}
      PRIVATEKEY: ${{ secrets.PRIVATEKEY }}
      FOREIGN_PRIVATEKEY: ${{ secrets.FOREIGN_PRIVATEKEY }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Node ${{ matrix.node }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node }}
    - name: Lint with eslint
      run: |
        npm run lint
    - uses: actions/checkout@v2
      with:
        repository: skalenetwork/filestorage
        token: ${{ secrets.ACCESS_TOKEN }}
        ref: develop
        path: filestorage
    - name: Copy config
      run:
        cp filestorage/test/utils/config.json test/utils
    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_KEY }}
        known_hosts: $ENDPOINT
    - name: Install dependencies
      run: |
        npm i
    - name: Generating test file, port
      if: matrix.os != 'windows-latest'
      run: |
        npm run generate
        export PORT=$((1000 + RANDOM % 10000))
        echo "sChain port: $PORT"
        bash run_test_container.sh
        echo $SCHEME$ENDPOINT:$PORT > SKALE_ENDPOINT
        sleep 30
    - name: Generating test file, port (win)
      if: matrix.os == 'windows-latest'
      run: |
        npm run generate-win
        $env:PORT=get-random -minimum 1000 -maximum 11000
        echo "sChain port: $env:PORT"
        bash run_test_container.sh
        echo $env:SCHEME$env:ENDPOINT`:$env:PORT > SKALE_ENDPOINT
        sleep 30
    - name: Unit testing
      if: matrix.os != 'windows-latest'
      run: |
        export SKALE_ENDPOINT=$(cat SKALE_ENDPOINT)
        npm test
        npm link; npm link @skalenetwork/filestorage.js
        npx mocha test/package
    - name: Unit testing (win)
      if: matrix.os == 'windows-latest'
      run: |
        $env:SKALE_ENDPOINT=cat SKALE_ENDPOINT 
        npm test
        npm link; npm link @skalenetwork/filestorage.js
        npx mocha test/package
    - name: Codecov
      run: |
        npm run coverage

# Fix browser testing
